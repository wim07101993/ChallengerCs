<UserControl
    x:Class="Challenger.Wpf.Views.ConverterChallenge"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:shared="clr-namespace:Challenger.Shared;assembly=Challenger.Shared"
    xmlns:vm="clr-namespace:Challenger.Wpf.ViewModels"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto">

    <UserControl.Resources>
        <Style BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}" TargetType="{x:Type TextBox}">
            <Setter Property="MinWidth" Value="300" />
            <Setter Property="Margin" Value="0,8" />
        </Style>
        <Style BasedOn="{StaticResource MaterialDesignGroupBox}" TargetType="{x:Type GroupBox}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="material:ShadowAssist.ShadowDepth" Value="Depth3" />
            <Setter Property="Margin" Value="16" />
        </Style>
    </UserControl.Resources>

    <UserControl.DataContext>
        <vm:ConverterViewModel />
    </UserControl.DataContext>

    <DockPanel>
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <Button
                    Command="Cut"
                    ToolBar.OverflowMode="AsNeeded"
                    ToolTip="Cut">
                    <material:PackIcon Kind="ContentCut" />
                </Button>
                <Button
                    Command="Copy"
                    ToolBar.OverflowMode="AsNeeded"
                    ToolTip="Copy that stuff">
                    <material:PackIcon Kind="ContentCopy" />
                </Button>
                <Button
                    Command="Paste"
                    ToolBar.OverflowMode="AsNeeded"
                    ToolTip="Copy that stuff">
                    <material:PackIcon Kind="ContentPaste" />
                </Button>
            </ToolBar>
            <ToolBar>
                <Label VerticalAlignment="Center" Content="Converter:" />
                <ComboBox ItemsSource="{Binding Converters}" SelectedIndex="{Binding SelectedConverterIndex}" />
                <Label
                    VerticalAlignment="Center"
                    Content="Endianness:"
                    IsEnabled="False" />
                <!--  TODO Enable endiannesses  -->
                <ComboBox IsEnabled="False">
                    <ComboBoxItem Content="Little-endian" IsSelected="True" />
                    <ComboBoxItem Content="Middle-endian" />
                    <ComboBoxItem Content="Big-endian" />
                </ComboBox>
            </ToolBar>
        </ToolBarTray>

        <StackPanel>
            <ItemsControl ItemsSource="{Binding Bits}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ToggleButton Content="{Binding Index, Mode=OneWay}" IsChecked="{Binding Value}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <ControlTemplate.Resources>
                                                    <Style TargetType="{x:Type material:ColorZone}">
                                                        <Setter Property="Width" Value="24" />
                                                        <Setter Property="Height" Value="24" />
                                                        <Setter Property="Margin" Value="4" />
                                                        <Setter Property="material:ShadowAssist.ShadowDepth" Value="Depth1" />
                                                    </Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                                        <Setter Property="VerticalAlignment" Value="Center" />
                                                        <Setter Property="FontSize" Value="9" />
                                                    </Style>
                                                </ControlTemplate.Resources>

                                                <Grid>
                                                    <material:ColorZone x:Name="Off" Background="{DynamicResource MaterialDesignBackground}">
                                                        <TextBlock Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                                    </material:ColorZone>
                                                    <material:ColorZone
                                                        x:Name="On"
                                                        Background="{DynamicResource SecondaryAccentBrush}"
                                                        Opacity="0">
                                                        <TextBlock Foreground="{DynamicResource MaterialDesignDarkForeground}" Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                                    </material:ColorZone>

                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation
                                                                        Storyboard.TargetName="On"
                                                                        Storyboard.TargetProperty="Opacity"
                                                                        From="0"
                                                                        To="1"
                                                                        Duration="0:0:0.2" />
                                                                    <DoubleAnimation
                                                                        Storyboard.TargetName="Off"
                                                                        Storyboard.TargetProperty="Opacity"
                                                                        From="1"
                                                                        To="0"
                                                                        Duration="0:0:0.2" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation
                                                                        Storyboard.TargetName="On"
                                                                        Storyboard.TargetProperty="Opacity"
                                                                        From="1"
                                                                        To="0"
                                                                        Duration="0:0:0.2" />
                                                                    <DoubleAnimation
                                                                        Storyboard.TargetName="Off"
                                                                        Storyboard.TargetProperty="Opacity"
                                                                        From="0"
                                                                        To="1"
                                                                        Duration="0:0:0.2" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <WrapPanel>
                <GroupBox material:ColorZoneAssist.Mode="Accent">
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <material:PackIcon
                                Width="32"
                                Height="32"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource MaterialDesignDarkForeground}"
                                Kind="CodeString" />
                            <TextBlock
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource MaterialDesignDarkForeground}"
                                Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
                                Text="String formatting" />
                        </StackPanel>
                    </GroupBox.Header>
                    <StackPanel Margin="24,0,24,24">
                        <TextBox
                            Margin="0,0,0,8"
                            material:HintAssist.HelperText="Data formatted in binary format"
                            material:HintAssist.Hint="Binary String"
                            Text="{Binding BinaryString.Value, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            material:HintAssist.HelperText="Data formatted in octal format"
                            material:HintAssist.Hint="Octal String"
                            Text="{Binding OctalString.Value, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            material:HintAssist.HelperText="Data formatted in decimal"
                            material:HintAssist.Hint="Decimal String"
                            Text="{Binding DecimalString.Value, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            material:HintAssist.HelperText="Data formatted in hexadecimal format"
                            material:HintAssist.Hint="Hexadecimal String"
                            Text="{Binding HexString.Value, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            material:HintAssist.HelperText="Data formatted in ASCII encoding"
                            material:HintAssist.Hint="ASCII String"
                            Text="{Binding AsciiString.Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                </GroupBox>

                <GroupBox material:ColorZoneAssist.Mode="Accent">
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <material:PackIcon
                                Width="32"
                                Height="32"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource MaterialDesignDarkForeground}"
                                Kind="Number2BoxMultipleOutline" />
                            <TextBlock
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource MaterialDesignDarkForeground}"
                                Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
                                Text="Number formatting" />
                        </StackPanel>
                    </GroupBox.Header>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBox
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="0,0,16,8"
                            material:HintAssist.HelperText="Data formatted as a 16 bit unsigned integer (ushort)"
                            material:HintAssist.Hint="UInt16"
                            Text="{Binding UShort.Value, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="0,0,0,8"
                            material:HintAssist.HelperText="Data formatted as a 16 bit integer (short)"
                            material:HintAssist.Hint="Int16"
                            Text="{Binding Short.Value, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            Grid.Row="1"
                            Grid.Column="0"
                            Margin="0,8,16,8"
                            material:HintAssist.HelperText="Data formatted as a 32 bit unsigned integer (uint)"
                            material:HintAssist.Hint="UInt32"
                            Text="{Binding UInt.Value, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            Grid.Row="1"
                            Grid.Column="1"
                            material:HintAssist.HelperText="Data formatted as a 32 bit integer (int)"
                            material:HintAssist.Hint="Int32"
                            Text="{Binding Int.Value, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            Grid.Row="2"
                            Grid.Column="0"
                            Margin="0,8,16,8"
                            material:HintAssist.HelperText="Data formatted as a 64 bit unsigned integer (ulong)"
                            material:HintAssist.Hint="UInt64"
                            Text="{Binding ULong.Value, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            Grid.Row="2"
                            Grid.Column="1"
                            material:HintAssist.HelperText="Data formatted as a 64 bit integer (long)"
                            material:HintAssist.Hint="UInt64"
                            Text="{Binding Long.Value, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            Grid.Row="3"
                            Grid.Column="0"
                            Margin="0,8,16,8"
                            material:HintAssist.HelperText="Data formatted as a 32 bit integer (float)"
                            material:HintAssist.Hint="Float32"
                            Text="{Binding Float.Value, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            Grid.Row="3"
                            Grid.Column="1"
                            material:HintAssist.HelperText="Data formatted as a 64 bit integer (double)"
                            material:HintAssist.Hint="Float64"
                            Text="{Binding Double.Value, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            Grid.Row="4"
                            Grid.Column="0"
                            material:HintAssist.HelperText="Data formatted as a 128 bit integer (decimal)"
                            material:HintAssist.Hint="Float128"
                            Text="{Binding Decimal.Value, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </GroupBox>
            </WrapPanel>
        </StackPanel>
    </DockPanel>
</UserControl>
