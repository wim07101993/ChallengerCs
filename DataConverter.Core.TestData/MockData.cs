using System.Text;

namespace DataConverter.Core.TestData
{
    public class MockData
    {
        public Example Zero => new Example
        {
            Bytes = new byte[] { 0x0, },
            BinaryString = "00000000",
            ShortBinaryString = "0",
            OctalString = "000",
            ShortOctalString = "0",
            DecimalString = "000",
            ShortDecimalString = "0",
            HexString = "00",
            ShortHexString = "0",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0x0, }),
            UShort = 0,
            Short = 0,
            UInt = 0,
            Int = 0,
            ULong = 0,
            Long = 0,
            Float = (float)0,
            Double = 0,
            Decimal = 0m,
        };

        public Example FF => new Example
        {
            Bytes = new byte[] { 0xff, },
            BinaryString = "11111111",
            ShortBinaryString = "11111111",
            OctalString = "377",
            ShortOctalString = "377",
            DecimalString = "255",
            ShortDecimalString = "255",
            HexString = "FF",
            ShortHexString = "FF",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0xff, }),
            UShort = 255,
            Short = 255,
            UInt = 255,
            Int = 255,
            ULong = 255,
            Long = 255,
            Float = (float)3.57E-43,
            Double = 1.26E-321,
            Decimal = 0m,
        };

        public Example BinaryBytes => new Example
        {
            Bytes = new byte[] { 0xaa, 0xaa, 0xaa, 0xaa, },
            BinaryString = "10101010 10101010 10101010 10101010",
            ShortBinaryString = "10101010 10101010 10101010 10101010",
            OctalString = "252 252 252 252",
            ShortOctalString = "252 252 252 252",
            DecimalString = "170 170 170 170",
            ShortDecimalString = "170 170 170 170",
            HexString = "AA AA AA AA",
            ShortHexString = "AA AA AA AA",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0xaa, 0xaa, 0xaa, 0xaa, }),
            UShort = 43690,
            Short = -21846,
            UInt = 2863311530,
            Int = -1431655766,
            ULong = 2863311530,
            Long = 2863311530,
            Float = (float)-3.0316488E-13,
            Double = 1.4146638603E-314,
            Decimal = 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000m,
        };

        public Example OctalBytes => new Example
        {
            Bytes = new byte[] { 0x37, 0x25, 0x53, },
            BinaryString = "01010011 00100101 00110111",
            ShortBinaryString = "1010011 100101 110111",
            OctalString = "123 045 067",
            ShortOctalString = "123 45 67",
            DecimalString = "083 037 055",
            ShortDecimalString = "83 37 55",
            HexString = "53 25 37",
            ShortHexString = "53 25 37",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0x37, 0x25, 0x53, }),
            UShort = 9527,
            Short = 9527,
            UInt = 5449015,
            Int = 5449015,
            ULong = 5449015,
            Long = 5449015,
            Float = (float)7.635696E-39,
            Double = 2.692171E-317,
            Decimal = 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000m,
        };

        public Example DecimalBytes => new Example
        {
            Bytes = new byte[] { 0x1, 0x20, 0x36, 0x4c, 0x62, 0x59, 0x43, 0x2d, 0x7b, },
            BinaryString = "01111011 00101101 01000011 01011001 01100010 01001100 00110110 00100000 00000001",
            ShortBinaryString = "1111011 101101 1000011 1011001 1100010 1001100 110110 100000 1",
            OctalString = "173 055 103 131 142 114 066 040 001",
            ShortOctalString = "173 55 103 131 142 114 66 40 1",
            DecimalString = "123 045 067 089 098 076 054 032 001",
            ShortDecimalString = "123 45 67 89 98 76 54 32 1",
            HexString = "7B 2D 43 59 62 4C 36 20 01",
            ShortHexString = "7B 2D 43 59 62 4C 36 20 1",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0x1, 0x20, 0x36, 0x4c, 0x62, 0x59, 0x43, 0x2d, 0x7b, }),
            UShort = 8193,
            Short = 8193,
            UInt = 1278615553,
            Int = 1278615553,
            ULong = 3261548833866653697,
            Long = 3261548833866653697,
            Float = (float)47742980,
            Double = 1.1873352004256596E-90,
            Decimal = 0.000000000000000000000000014008245570272602869280538747m,
        };

        public Example Ascii => new Example
        {
            Bytes = new byte[] { 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, },
            BinaryString = "01100100 01101100 01110010 01101111 01110111 00100000 01101111 01101100 01101100 01100101 01101000",
            ShortBinaryString = "1100100 1101100 1110010 1101111 1110111 100000 1101111 1101100 1101100 1100101 1101000",
            OctalString = "144 154 162 157 167 040 157 154 154 145 150",
            ShortOctalString = "144 154 162 157 167 40 157 154 154 145 150",
            DecimalString = "100 108 114 111 119 032 111 108 108 101 104",
            ShortDecimalString = "100 108 114 111 119 32 111 108 108 101 104",
            HexString = "64 6C 72 6F 77 20 6F 6C 6C 65 68",
            ShortHexString = "64 6C 72 6F 77 20 6F 6C 6C 65 68",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, }),
            UShort = 25960,
            Short = 25960,
            UInt = 1819043176,
            Int = 1819043176,
            ULong = 8031924123371070824,
            Long = 8031924123371070824,
            Float = (float)1.1431415E+27,
            Double = 8.765776478827897E+228,
            Decimal = 0.000000000000000000000000000000000000000000000000000000000000000000000000000000034496851426019487510654381170m,
        };

        public Example UShort => new Example
        {
            Bytes = new byte[] { 0x39, 0x30, },
            BinaryString = "00110000 00111001",
            ShortBinaryString = "110000 111001",
            OctalString = "060 071",
            ShortOctalString = "60 71",
            DecimalString = "048 057",
            ShortDecimalString = "48 57",
            HexString = "30 39",
            ShortHexString = "30 39",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0x39, 0x30, }),
            UShort = 12345,
            Short = 12345,
            UInt = 12345,
            Int = 12345,
            ULong = 12345,
            Long = 12345,
            Float = (float)1.7299E-41,
            Double = 6.099E-320,
            Decimal = 0m,
        };

        public Example UInt => new Example
        {
            Bytes = new byte[] { 0xd3, 0x2, 0x96, 0x49, },
            BinaryString = "01001001 10010110 00000010 11010011",
            ShortBinaryString = "1001001 10010110 10 11010011",
            OctalString = "111 226 002 323",
            ShortOctalString = "111 226 2 323",
            DecimalString = "073 150 002 211",
            ShortDecimalString = "73 150 2 211",
            HexString = "49 96 02 D3",
            ShortHexString = "49 96 2 D3",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0xd3, 0x2, 0x96, 0x49, }),
            UShort = 723,
            Short = 723,
            UInt = 1234567891,
            Int = 1234567891,
            ULong = 1234567891,
            Long = 1234567891,
            Float = (float)1228890.4,
            Double = 6.099575824E-315,
            Decimal = 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000m,
        };

        public Example ULong => new Example
        {
            Bytes = new byte[] { 0xbb, 0x7f, 0x7, 0x79, 0xef, 0x6, },
            BinaryString = "00000110 11101111 01111001 00000111 01111111 10111011",
            ShortBinaryString = "110 11101111 1111001 111 1111111 10111011",
            OctalString = "006 357 171 007 177 273",
            ShortOctalString = "6 357 171 7 177 273",
            DecimalString = "006 239 121 007 127 187",
            ShortDecimalString = "6 239 121 7 127 187",
            HexString = "06 EF 79 07 7F BB",
            ShortHexString = "6 EF 79 7 7F BB",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0xbb, 0x7f, 0x7, 0x79, 0xef, 0x6, }),
            UShort = 32699,
            Short = 32699,
            UInt = 2030534587,
            Int = 2030534587,
            ULong = 7625597484987,
            Long = 7625597484987,
            Float = (float)4.397192E+34,
            Double = 3.7675457463455E-311,
            Decimal = 3274297073083445.4118400m,
        };

        public Example Short => new Example
        {
            Bytes = new byte[] { 0xc7, 0xcf, },
            BinaryString = "11001111 11000111",
            ShortBinaryString = "11001111 11000111",
            OctalString = "317 307",
            ShortOctalString = "317 307",
            DecimalString = "207 199",
            ShortDecimalString = "207 199",
            HexString = "CF C7",
            ShortHexString = "CF C7",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0xc7, 0xcf, }),
            UShort = 53191,
            Short = -12345,
            UInt = 53191,
            Int = 53191,
            ULong = 53191,
            Long = 53191,
            Float = (float)7.4536E-41,
            Double = 2.628E-319,
            Decimal = 0m,
        };

        public Example Int => new Example
        {
            Bytes = new byte[] { 0xeb, 0x32, 0xa4, 0xf8, },
            BinaryString = "11111000 10100100 00110010 11101011",
            ShortBinaryString = "11111000 10100100 110010 11101011",
            OctalString = "370 244 062 353",
            ShortOctalString = "370 244 62 353",
            DecimalString = "248 164 050 235",
            ShortDecimalString = "248 164 50 235",
            HexString = "F8 A4 32 EB",
            ShortHexString = "F8 A4 32 EB",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0xeb, 0x32, 0xa4, 0xf8, }),
            UShort = 13035,
            Short = 13035,
            UInt = 4171510507,
            Int = -123456789,
            ULong = 4171510507,
            Long = 4171510507,
            Float = (float)-2.6642794E+34,
            Double = 2.061000033E-314,
            Decimal = 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000m,
        };

        public Example Long => new Example
        {
            Bytes = new byte[] { 0x45, 0x80, 0xf8, 0x86, 0x10, 0xf9, },
            BinaryString = "11111001 00010000 10000110 11111000 10000000 01000101",
            ShortBinaryString = "11111001 10000 10000110 11111000 10000000 1000101",
            OctalString = "371 020 206 370 200 105",
            ShortOctalString = "371 20 206 370 200 105",
            DecimalString = "249 016 134 248 128 069",
            ShortDecimalString = "249 16 134 248 128 69",
            HexString = "F9 10 86 F8 80 45",
            ShortHexString = "F9 10 86 F8 80 45",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0x45, 0x80, 0xf8, 0x86, 0x10, 0xf9, }),
            UShort = 32837,
            Short = -32699,
            UInt = 2264432709,
            Int = -2030534587,
            ULong = 273849379225669,
            Long = 273849379225669,
            Float = (float)-9.3475707E-35,
            Double = 1.352995704103546E-309,
            Decimal = -0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001176164402139721011036160m,
        };

        public Example Float => new Example
        {
            Bytes = new byte[] { 0xb7, 0xe6, 0x40, 0x46, },
            BinaryString = "01000110 01000000 11100110 10110111",
            ShortBinaryString = "1000110 1000000 11100110 10110111",
            OctalString = "106 100 346 267",
            ShortOctalString = "106 100 346 267",
            DecimalString = "070 064 230 183",
            ShortDecimalString = "70 64 230 183",
            HexString = "46 40 E6 B7",
            ShortHexString = "46 40 E6 B7",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0xb7, 0xe6, 0x40, 0x46, }),
            UShort = 59063,
            Short = -6473,
            UInt = 1178658487,
            Int = 1178658487,
            ULong = 1178658487,
            Long = 1178658487,
            Float = (float)12345.679,
            Double = 5.823346666E-315,
            Decimal = 0.0000000000000000000000000000000000000000000000000000000000000000m,
        };

        public Example Double => new Example
        {
            Bytes = new byte[] { 0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0x9, 0x40, },
            BinaryString = "01000000 00001001 00100001 11111011 01010100 01000100 00101101 00011000",
            ShortBinaryString = "1000000 1001 100001 11111011 1010100 1000100 101101 11000",
            OctalString = "100 011 041 373 124 104 055 030",
            ShortOctalString = "100 11 41 373 124 104 55 30",
            DecimalString = "064 009 033 251 084 068 045 024",
            ShortDecimalString = "64 9 33 251 84 68 45 24",
            HexString = "40 09 21 FB 54 44 2D 18",
            ShortHexString = "40 9 21 FB 54 44 2D 18",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0x9, 0x40, }),
            UShort = 11544,
            Short = 11544,
            UInt = 1413754136,
            Int = 1413754136,
            ULong = 4614256656552045848,
            Long = 4614256656552045848,
            Float = (float)3.3702806E+12,
            Double = 3.141592653589793,
            Decimal = 0.00000000000000000000000000000000000000019818081429169313260347850752m,
        };

        public Example Decimal => new Example
        {
            Bytes = new byte[] { 0x0, 0x0, 0x1c, 0x0, 0xab, 0x19, 0xd5, 0x57, 0x5a, 0xed, 0x7a, 0x85, 0x35, 0xde, 0xec, 0xeb, },
            BinaryString = "11101011 11101100 11011110 00110101 10000101 01111010 11101101 01011010 01010111 11010101 00011001 10101011 00000000 00011100 00000000 00000000",
            ShortBinaryString = "11101011 11101100 11011110 110101 10000101 1111010 11101101 1011010 1010111 11010101 11001 10101011 0 11100 0 0",
            OctalString = "353 354 336 065 205 172 355 132 127 325 031 253 000 034 000 000",
            ShortOctalString = "353 354 336 65 205 172 355 132 127 325 31 253 0 34 0 0",
            DecimalString = "235 236 222 053 133 122 237 090 087 213 025 171 000 028 000 000",
            ShortDecimalString = "235 236 222 53 133 122 237 90 87 213 25 171 0 28 0 0",
            HexString = "EB EC DE 35 85 7A ED 5A 57 D5 19 AB 00 1C 00 00",
            ShortHexString = "EB EC DE 35 85 7A ED 5A 57 D5 19 AB 0 1C 0 0",
            AsciiString = Encoding.ASCII.GetString(new byte[] { 0x0, 0x0, 0x1c, 0x0, 0xab, 0x19, 0xd5, 0x57, 0x5a, 0xed, 0x7a, 0x85, 0x35, 0xde, 0xec, 0xeb, }),
            UShort = 0,
            Short = 0,
            UInt = 1835008,
            Int = 1835008,
            ULong = 6328993073571037184,
            Long = 6328993073571037184,
            Float = (float)2.571394E-39,
            Double = 1.2990512380451189E+115,
            Decimal = 2.7182818284590452353602874714m,
        };
    }
}
